<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:TonorpStandAloneWPF"
					xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
					xmlns:System="clr-namespace:System;assembly=mscorlib">

	<!--Default Search textbox style-->
	<Style x:Key="TextBoxDefault" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
		<Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="Margin" Value="0 5 0 5"/>
		<Setter Property="BorderBrush" Value="{StaticResource LightGrayBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>

		<Setter Property="Background" Value="{StaticResource SoftOffWhiteBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource LightGrayBrush}"/>


		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">

					<Grid>
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
								BorderThickness="{TemplateBinding BorderThickness}" 
								Background="{TemplateBinding Background}" 
								SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="False" 
										  HorizontalScrollBarVisibility="Hidden" 
										  VerticalScrollBarVisibility="Hidden"/>
						</Border>

						<TextBlock IsHitTestVisible="False"
							Text="{TemplateBinding Tag}"
							x:Name="Placeholder"
							FontFamily="{StaticResource LatoRegular}"
							Padding="{TemplateBinding Padding}"
							VerticalAlignment="Center"
							HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							Foreground="{TemplateBinding Foreground}">

							<TextBlock.Style>
								<Style TargetType="{x:Type TextBlock}">
									<Setter Property="Visibility" Value="Collapsed"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
											<Setter Property="Visibility" Value="Visible"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="border" Value="0.56"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenBrush}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Headert text-->
	<Style TargetType="{x:Type TextBlock}" x:Key="HeaderText" BasedOn="{StaticResource BaseTextBlockStyle}">
		<Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"/>
		<Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
		<Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="2"/>
	</Style>

	<!--Page title text-->
	<Style TargetType="{x:Type TextBlock}" x:Key="TitleText" BasedOn="{StaticResource HeaderText}">
		<Setter Property="Foreground" Value="{StaticResource VeryLightGreenBrush}"/>
	</Style>

	<!--Default textbox style-->
	<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
		<Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="Margin" Value="0 5 0 5"/>
		<Setter Property="BorderBrush" Value="{StaticResource LightGrayBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>

		<Setter Property="Background" Value="{StaticResource SoftOffWhiteBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource LightGrayBrush}"/>


		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">

					<Grid>
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
						</Border>

						<TextBlock IsHitTestVisible="False"
								   Text="{TemplateBinding Tag}"
								   x:Name="Placeholder"
								   FontFamily="{StaticResource LatoRegular}"
								   Padding="{TemplateBinding Padding}"
								   VerticalAlignment="Center"
								   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								   Foreground="{StaticResource LightGrayBrush}">

							<TextBlock.Style>
								<Style TargetType="{x:Type TextBlock}">
									<Setter Property="Visibility" Value="Collapsed"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
											<Setter Property="Visibility" Value="Visible"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>


					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="border" Value="0.56"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenBrush}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--PasswordBox-->
	<Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
		<Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="Margin" Value="0 5 0 5"/>
		<Setter Property="BorderBrush" Value="{StaticResource LightGrayBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>

		<!--<Setter Property="attachedProperties:MonitorPasswordProperty.Value" Value="True"/>-->

		<Setter Property="Background" Value="{StaticResource OffWhiteBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource LightGrayBrush}"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">

					<Grid>
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
						</Border>

						<TextBlock IsHitTestVisible="False"
								   Text="{TemplateBinding Tag}"
								   x:Name="Placeholder"
								   FontFamily="{StaticResource LatoRegular}"
								   Padding="{TemplateBinding Padding}"
								   VerticalAlignment="Center"
								   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								   Foreground="{StaticResource LightGrayBrush}"/>
						<!--<TextBlock IsHitTestVisible="False"
								   Text="{TemplateBinding Tag}"
								   x:Name="Placeholder"
								   FontFamily="{StaticResource LatoThin}"
								   Padding="{TemplateBinding Padding}"
								   Visibility="{TemplateBinding attachedProperties:HasTextProperty.Value, Converter={valueConverter:BooleanToVisibilityConverter}}"
								   VerticalAlignment="Center"
								   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								   Foreground="{StaticResource ForegroundMainBrush}">

						</TextBlock>-->


					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="border" Value="0.56"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenBrush}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Spinning Text Block-->
	<Style TargetType="{x:Type TextBlock}" x:Key="SpinningText">

		<Style.Resources>
			<Storyboard x:Key="Spin">
				<DoubleAnimation 
					Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
					From="0"
					To="360"
					Duration="0:0:2"
					RepeatBehavior="Forever"/>
			</Storyboard>
		</Style.Resources>

		<Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
		<Setter Property="Text" Value="&#xF110;"/>
		<Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<RotateTransform/>
			</Setter.Value>
		</Setter>

		<Style.BasedOn>
			<StaticResource ResourceKey="BaseTextBlockStyle"/>
		</Style.BasedOn>

		<Style.Triggers>
			<DataTrigger Binding="{Binding IsVisible, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
				<DataTrigger.EnterActions>
					<BeginStoryboard x:Name="SpinStoryBoard" Storyboard="{StaticResource Spin}"/>
				</DataTrigger.EnterActions>

				<DataTrigger.ExitActions>
					<RemoveStoryboard BeginStoryboardName="SpinStoryBoard"/>
				</DataTrigger.ExitActions>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<!--New ListView Stlye-->
	<Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Border Name="Border" Padding="2" 
							SnapsToDevicePixels="true" 
							BorderThickness="0,0,0,1"
							BorderBrush="{StaticResource VeryLightGrayBrush}"
							Background="Transparent">

						<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource VeryLightGreenBrush}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Background" Value="Beige"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Flat ComboBox Toggle button Style-->
	<ControlTemplate  x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border Grid.ColumnSpan="2" Name="Border"
			  BorderBrush="{StaticResource VeryLightGrayBrush}" 
			  CornerRadius="0" BorderThickness="1, 1, 1, 1" 
			  Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
			<Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="{StaticResource VeryLightGrayBrush}" Name="ButtonBorder"
			  CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
			  Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

			<Path Name="Arrow" Grid.Column="1" 
			Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
			HorizontalAlignment="Center" Fill="#444"
			VerticalAlignment="Center" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked" Value="True">
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
				<Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
				<Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--Flat ComboBox Style-->
	<Style x:Key="{x:Type ComboBox}"  TargetType="{x:Type ComboBox}">
		<Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="TextElement.Foreground" Value="Black"/>
		<Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton Name="ToggleButton"
									  ClickMode="Press" Focusable="False"
									  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
									  Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

						<ContentPresenter Name="ContentSite" IsHitTestVisible="False"
										  HorizontalAlignment="Left" VerticalAlignment="Center"                              
										  Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
										  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
										  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
						<TextBox Name="PART_EditableTextBox"                     
								 IsReadOnly="{TemplateBinding IsReadOnly}"
								 Visibility="Hidden" Background="Transparent"
								 HorizontalAlignment="Left" VerticalAlignment="Center"
								 Focusable="True"
								 FontSize="{StaticResource FontSizeSmall}">
							<TextBox.Template>
								<ControlTemplate TargetType="TextBox" >
									<Border Name="PART_ContentHost" Focusable="False"/>
								</ControlTemplate>
							</TextBox.Template>
						</TextBox>
						<!-- Popup showing items -->
						<Popup Name="Popup" Placement="Bottom"
							   Focusable="False" AllowsTransparency="True"
							   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
							   PopupAnimation="Slide">
							<Grid Name="DropDown" SnapsToDevicePixels="True"
								  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
								  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
								<Border Name="DropDownBorder" Background="{StaticResource SoftOffWhiteBrush}" Margin="0, 1, 0, 0"
										CornerRadius="0" BorderThickness="1" 
										BorderBrush="{StaticResource VeryLightGrayBrush}"/>
								<ScrollViewer Margin="4" SnapsToDevicePixels="True">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{StaticResource VeryLightGreenBrush}"/>
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
							<Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
							<Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--ComboBoxItem  Style-->
	<Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
		<Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Padding" Value="5 10"/>
		<Setter Property="Height" Value="50"/>
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<ScrollViewer Name="Border" 
								  VerticalScrollBarVisibility="Auto"
							      Padding="{TemplateBinding Padding}" 
							      SnapsToDevicePixels="true" 
							      BorderThickness="0"
							      BorderBrush="{StaticResource VeryLightGrayBrush}"
							      Background="Transparent">

						<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</ScrollViewer>

					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource VeryLightGreenBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter  Property="Foreground" Value="{StaticResource VeryLightGrayBrush}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource VeryLightGreenBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!--Scrollbar Thumbs-->
	<Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid x:Name="Grid">
						<Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
						<Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Tag" Value="Horizontal">
							<Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
							<Setter TargetName="Rectangle1" Property="Height" Value="7" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--ScrollBars-->
	<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
		<Setter Property="Stylus.IsFlicksEnabled" Value="false" />
		<Setter Property="Foreground" Value="{StaticResource DarkGreenBrush}" />
		<Setter Property="Background" Value="{StaticResource VeryLightGrayBrush}" />
		<Setter Property="Width" Value="8" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="0.00001*" />
						</Grid.RowDefinitions>

						<Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
							<Track.Thumb>
								<Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
							</Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
							</Track.DecreaseRepeatButton>
						</Track>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{StaticResource GreenBrush}" TargetName="Thumb" />
						</Trigger>
						<Trigger SourceName="Thumb" Property="IsDragging" Value="true">
							<Setter Property="Background" Value="{StaticResource DarkGreenBrush}" TargetName="Thumb" />
						</Trigger>

						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="Orientation" Value="Horizontal">
							<Setter TargetName="GridRoot" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="PART_Track" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
							<Setter Property="Width" Value="Auto" />
							<Setter Property="Height" Value="8" />
							<Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
							<Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
							<Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>